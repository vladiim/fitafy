@AddExerciseToWorkout =

  init: ->
    @renderer = new HoganTemplateBuilder
    @buttons  = $( 'a.add_exercise_to_workout_button' )
    @buttonListener()

  buttonListener: ->
    @buttons.on 'click', (event) =>
      @button = $( event.target )
      @createWorkoutExercise()
      event.preventDefault()

  createWorkoutExercise: ->
    $.ajax {
      url: "/workout_exercises?#{@getParams()}",
      type: 'POST',
      dataType: 'json',

      success: => AddExerciseToWorkout.getAndLoadWorkoutExercises()

      failure: => alert('Sorry something went wrong! Try again...')
    }


  getAndLoadWorkoutExercises: ->
    $.getJSON("/workout_exercises?workout_id=#{@button.data('workout_id')}", @loadWorkoutExercises)

  loadWorkoutExercises: (workout_exercises) =>
    $( 'ul.workout_exercises > li' ).remove()
    AddExerciseToWorkout.loadWorkoutExercise(workout_exercise) for workout_exercise in workout_exercises

  loadWorkoutExercise: (workout_exercise) ->
    $( 'ul.workout_exercises' ).append(@renderer.render('app/templates/workout_exercises/show', workout_exercise))

  getParams: ->
    $.param( { workout_exercise: { workout_id: @button.data('workout_id'), exercise_id: @button.data('exercise_id') } })

$ ->
  exercise_modal = $('.modal#add_workout_exercise')
  if exercise_modal.length > 0
    document.body.addEventListener "DOMNodeInserted", (event) =>
      element = $( event.target )
      if element.hasClass('exercise_list_item')
        AddExerciseToWorkout.init()

# if $('.modal#add_workout_exercise')
#   document.body.addEventListener "DOMNodeInserted", (event) =>
#     @element  = $( event.target )
  
#     if element.hasClass('exercise_list_item')
#       @link = $(@element).find('a.add_exercise_to_workout_button')
#       if @link.length > 0
#         add_exercise_to_workout = new AddExerciseToWorkout @link
#         add_exercise_to_workout.init()

# class window.AddExerciseToWorkout

#   constructor: (@link, @template_renderer = new HoganTemplateBuilder) ->
#     @params   = $.param( { workout_exercise: { workout_id: @link.data('workout_id'), exercise_id: @link.data('exercise_id') } })
#     @mustache = 'app/templates/workout_exercises/show'

#   init: ->
#     @link.on 'click', (event) =>
#       event.preventDefault()
#       @createWorkoutExercise()

#   createWorkoutExercise: =>
#     $.ajax {
#       url: "/workout_exercises?#{@params}",
#       type: 'POST',
#       dataType: 'json',

#       success: (workout_exercise) => @updateWorkout(workout_exercise)

#       failure: => alert('Sorry something went wrong! Try again...')
#     }

#   updateWorkout: (workout_exercise) =>
#     $(@link).parent($( 'h4' )).effect('highlight', {}, 4500)
#     @link.next('p').text('Exercise Added!').fadeIn(200).fadeOut(4500)
#     $( 'ul.workout_exercises' ).append(@template_renderer.render(@mustache, workout_exercise))

# # need to listen when DOM nodes are inserted because the
# # ADD exercise to workout link is generated by ExerciseModalLoader
# if $('.modal#add_workout_exercise')
#   document.body.addEventListener "DOMNodeInserted", (event) =>
#     @element  = $( event.target )
  
#     if element.hasClass('exercise_list_item')
#       @link = $(@element).find('a.add_exercise_to_workout_button')
#       if @link.length > 0
#         add_exercise_to_workout = new AddExerciseToWorkout @link
#         add_exercise_to_workout.init()